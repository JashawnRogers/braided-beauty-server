spring.application.name=braided-beauty

spring.datasource.url=jdbc:postgresql://localhost:5432/braided_beauty
spring.datasource.username=${USER}
spring.datasource.password=${PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.id.new_generator_mappings=true

spring.security.oauth2.client.registration.google.client-id=${OAUTH_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${OAUTH_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=${BASE_URL}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google

logging.level.org.springframework.security.web=TRACE
logging.level.org.springframework.security=DEBUG

stripe.secret.key=${STRIPE_TEST_SECRET_KEY}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}

braided-beauty.buffer-minutes=60

# RSA key locations (classpath means they're inside src/main/resources)
jwt.private-key=classpath:keys/private.pem
jwt.public-key=classpath:keys/public.pem

server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=ALWAYS

logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.data=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.level.org.springframework.boot.web.servlet=DEBUG